exports.up = function (knex) {
  return knex.schema
    .createTable("login", (table) => {
      table.increments("id").primary(),
        table.string("username").notNullable(),
        table.string("password").notNullable(),
        table.string("service_provider").notNullable();
    })
    .createTable("service_category", (table) => {
      table.increments("id").primary(),
        table.string("category_name").notNullable(),
        table.string("category_description").notNullable(),
        table.string("image_URL").notNullable();
    })
    .createTable("service", (table) => {
      table.increments("id").primary,
        table.string("name").notNullable(),
        table.string("description").notNullable(),
        table.string("image_URL").notNullable(),
        table.string("estimated_cost").notNullable(),
        table.string("location").notNullable(),
        table
          .integer("service_category_id")
          .unsigned()
          .references("service_category.id")
          .onUpdate("CASCADE")
          .onDelete("CASCADE");
    })
    .createTable("user", (table) => {
      table.increments("id").primary(),
        table.string("firstname").notNullable(),
        table.string("lastname").notNullable(),
        table.string("phone").notNullable(),
        table.string("username").notNullable(),
        table.string("email").notNullable(),
        table.string("apartment").notNullable(),
        table.string("street").notNullable(),
        table.string("city").notNullable(),
        table.string("province").notNullable(),
        table.string("country").notNullable();
    })
    .createTable("service_provider", (table) => {
      table.increments("id").primary(),
        table.string("firstname").notNullable(),
        table.string("lastname").notNullable(),
        table.string("phone").notNullable(),
        table.string("email").notNullable(),
        table.string("apartment").notNullable(),
        table.string("street").notNullable(),
        table.string("city").notNullable(),
        table.string("province").notNullable(),
        table.string("country").notNullable(),
        table.integer("age").notNullable(),
        table.string("gender").notNullable(),
        table.string("status").notNullable();
    })
    .createTable("user_request", (table) => {
      table.increments("id").primary(),
        table
          .integer("user_id")
          .unsigned()
          .references("user.id")
          .onUpdate("CASCADE")
          .onDelete("CASCADE"),
        table
          .integer("service_category_id")
          .unsigned()
          .references("service_category.id")
          .onUpdate("CASCADE")
          .onDelete("CASCADE"),
        table
          .integer("service_id")
          .unsigned()
          .references("service.id")
          .onUpdate("CASCADE")
          .onDelete("CASCADE"),
        table.timestamp("appointment_date"),
        table.string("slot"),
        table.string("user_input"),
        table.timestamp("created_on").defaultTo(knex.fn.now()),
        table.string("status"),
        table
          .integer("service_provider_id")
          .unsigned()
          .references("service_provider.id")
          .onDelete("CASCADE")
          .onUpdate("CASCADE");
    })
    .createTable("user_request_files", (table) => {
      table.increments("id").primary(),
        table
          .integer("user_request_id")
          .unsigned()
          .references("user_request.id")
          .onUpdate("CASCADE")
          .onDelete("CASCADE"),
        table.string("file_URL");
    })
    .createTable("queries_raised", (table) => {
      table.increments("id").primary(),
        table
          .integer("user_request_id")
          .unsigned()
          .references("user_request.id")
          .onUpdate("CASCADE")
          .onDelete("CASCADE"),
        table.string("query_category").notNullable(),
        table.string("query_description").notNullable(),
        table.string("image_URL").notNullable(),
        table.timestamp("raised_on").defaultTo(knex.fn.now()),
        table.string("status").notNullable();
    })
    .createTable("queries_raised_files", (table) => {
      table.increments("id").primary(),
        table
          .integer("queries_raised_id")
          .unsigned()
          .references("queries_raised.id")
          .onUpdate("CASCADE")
          .onDelete("CASCADE"),
        table.string("file_URL");
    })
    .createTable("ratings_reviews", (table) => {
      table.increments("id").primary(),
        table
          .integer("user_request_id")
          .unsigned()
          .references("user_request.id")
          .onUpdate("CASCADE")
          .onDelete("CASCADE"),
        table.integer("rating"),
        table.string("review");
    })
    .createTable("quote", (table) => {
      table.increments("id").primary(),
        table
          .integer("user_request_id")
          .unsigned()
          .references("user_request.id")
          .onUpdate("CASCADE")
          .onDelete("CASCADE"),
        table
          .integer("service_provider_id")
          .unsigned()
          .references("service_provider.id")
          .onUpdate("CASCADE")
          .onDelete("CASCADE"),
        table.string("amount").notNullable();
      table.string("estimated_duration").notNullable(),
        table.string("description"),
        table.timestamp("created_on").defaultTo(knex.fn.now());
    })
    .createTable("quote_files", (table) => {
      table.increments("id").primary(),
        table
          .integer("quote_id")
          .unsigned()
          .references("quote.id")
          .onUpdate("CASCADE")
          .onDelete("CASCADE"),
        table.string("file_URL");
    })
    .createTable("payment", (table) => {
      table.increments("id").primary(),
        table
          .integer("user_request_id")
          .unsigned()
          .references("user_request.id")
          .onUpdate("CASCADE")
          .onDelete("CASCADE"),
        table.string("amount").notNullable(),
        table.string("status").notNullable(),
        table.string("transaction_date");
    });
};

exports.down = function (knex) {
  return knex.schema
    .dropTable("login")
    .dropTable("payment")
    .dropTable("quote_files")
    .dropTable("quote")
    .dropTable("ratings_reviews")
    .dropTable("queries_raised_files")
    .dropTable("queries_raised")
    .dropTable("user_request_files")
    .dropTable("user_request")
    .dropTable("service_provider")
    .dropTable("user")
    .dropTable("service")
    .dropTable("service_category");
};
